akka {

  remote {
    enabled-transports = ["akka.remote.netty.ssl"]
    #In case of SSL enabled in akka.remote.netty.tcp.enable-ssl
    enabled-transports-ssl = ["akka.remote.netty.ssl"]
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      hostname = ${?AKKA_HOSTNAME}
      port = 2552
      enable-ssl = false
    }
    netty.ssl = ${akka.remote.netty.tcp}
    netty.ssl = {
      # Enable SSL/TLS encryption.
      # This must be enabled on both the client and server to work.
      enable-ssl = false
      security {
        # This is the Java Key Store used by the server connection
        key-store = "/opt/certs/server.keystore"

        # This password is used for decrypting the key store
        key-store-password = "nsdb.key"

        # This password is used for decrypting the key
        key-password = "nsdb.key"

        # This is the Java Key Store used by the client connection
        trust-store = "/opt/certs/server.truststore"

        # This password is used for decrypting the trust store
        trust-store-password = "nsdb.key"

        # Protocol to use for SSL encryption, choose from:
        # Java 6 & 7:
        #   'SSLv3', 'TLSv1'
        # Java 7:
        #   'TLSv1.1', 'TLSv1.2'
        protocol = "TLSv1.2"

        # Example: ["TLS_RSA_WITH_AES_128_CBC_SHA", "TLS_RSA_WITH_AES_256_CBC_SHA"]
        # You need to install the JCE Unlimited Strength Jurisdiction Policy
        # Files to use AES 256.
        # More info here:
        # http://docs.oracle.com/javase/7/docs/technotes/guides/security/SunProviders.html#SunJCEProvider
        enabled-algorithms = ["TLS_RSA_WITH_AES_128_CBC_SHA"]

        random-number-generator = "AES128CounterSecureRNG"
      }
    }

    cluster {
      seed-nodes = ["akka.tcp://nsdb@"${akka.remote.netty.tcp.hostname}":2552"]
      #In case of SSL enabled in akka.remote.netty.tcp.enable-ssl
      seed-nodes-ssl = ["akka.ssl.tcp://nsdb@"${akka.remote.netty.tcp.hostname}":2552"]
    }

    log-dead-letters = 10
    log-dead-letters-during-shutdown = on
  }
}
nsdb {

  http {
    interface = "0.0.0.0"
    interface = ${?HTTP_INTERFACE}
    port = 9000
    https-port = 9443
    port = ${?HTTP_PORT}
    https-port = ${?HTTPS_PORT}
  }

  index {
    base-path= "data/index"
  }

  commit-log {
    enabled = false
    serializer = "io.radicalbit.nsdb.commit_log.StandardCommitLogSerializer"
    writer = "io.radicalbit.nsdb.commit_log.RollingCommitLogFileWriter"
    directory = "/tmp/"
    max-size = 50000
  }

  sharding {
    enabled = false
    interval = 1 d
  }

  security {
    enabled = false
    auth-provider-class = ""
  }

  websocket {
    // Websocket publish period expressed in milliseconds
    refresh-period = 100
    //Websocket retention size
    retention-size = 10
  }
}
