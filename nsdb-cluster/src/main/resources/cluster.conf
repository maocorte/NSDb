akka {

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = cluster
    debug {
      # enable DEBUG logging of actor lifecycle changes
      lifecycle = on
    }
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      hostname = ${?AKKA_HOSTNAME}
      port = 2552
    }
  }

  cluster {
    seed-nodes = ["akka.tcp://nsdb@"${akka.remote.netty.tcp.hostname}":2552"]
  }

  log-dead-letters = 10
  log-dead-letters-during-shutdown = on

  extensions = ["akka.cluster.client.ClusterClientReceptionist", "akka.cluster.pubsub.DistributedPubSub",
                "io.radicalbit.nsdb.cluster.extension.RemoteAddress"]

  http.server.idle-timeout = 1 hour
}

nsdb {

  http {
    interface = "0.0.0.0"
    interface = ${?HTTP_INTERFACE}
    port = 9000
    ssl-port = 9443
    port = ${?HTTP_PORT}
    api.path = "api"
    api.version = "v0.1"
  }

  index {
    base-path= "data/index"
  }

  commit-log {
    enabled = false
    serializer = "io.radicalbit.nsdb.commit_log.StandardCommitLogSerializer"
    writer = "io.radicalbit.nsdb.commit_log.RollingCommitLogFileWriter"
    directory = "/tmp/"
    max-size = 50000
  }

  sharding {
    enabled = true
    interval = 1d
  }

  global.timeout = 30 seconds
  global.timeout = ${?GLOBAL_TIMEOUT}
  rpc-endpoint.timeout = 30 seconds
  rpc-endpoint.timeout = ${?RPC_TIMEOUT}
  rpc-akka-endpoint.timeout = 30 seconds
  rpc-akka-endpoint.timeout = ${?RPC_AKKA_TIMEOUT}

  read-coordinatoor.timeout = 30 seconds
  read-coordinatoor.timeout = ${?READ_COORDINATOR_TIMEOUT}
  write-coordinator.timeout = 30 seconds
  write-coordinator.timeout = ${?WRITE_COORDINATOR_TIMEOUT}
  namespace-schema.timeout = 30 seconds
  namespace-schema.timeout = ${?NAMESPACE_SCHEMA_TIMEOUT}
  namespace-data.timeout = 30 seconds
  namespace-data.timeout = ${?NAMESPACE_DATA_TIMEOUT}
  publisher.timeout = 30 seconds
  publisher.timeout = ${?PUBLISHER_TIMEOUT}
  publisher.scheduler.interval = 5 seconds

  write.scheduler.interval = 15 seconds

  stream.timeout = 30 seconds
  stream.timeout = ${?STREAM_TIMEOUT}
}
